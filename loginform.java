/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package library.management;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author EliteBook
 */
public class loginform extends javax.swing.JFrame {

    public static String getConstring()   ///con string
    {
        
        return "jdbc:sqlserver://COMPLUS\\alibutt:1433;databaseName=lib;user=sa;password=alibutt";
    }
    private static Connection con;
    private static Statement st;
    private static ResultSet rs;
   
    public static List <book> fetchbooks() throws SQLException   /// fetching books from database
    {
        
        con=DriverManager.getConnection(getConstring());
        st=con.createStatement();
        rs=st.executeQuery("select * from book");
        ArrayList book=new ArrayList <book> ();
        
        while (rs.next())
        {  
           int id=rs.getInt("bookid");
           String title=rs.getString("title");
           String author=rs.getString("author");
           String subject=rs.getString("subject");
           int status=rs.getInt("status1");
           book.add(new book(id,author,subject,title,status));
           
        }
        
        return book;
        
    }
    
      public static List <user> fetchuser() throws SQLException   /// fetching books from database
    {
        
        con=DriverManager.getConnection(getConstring());
        st=con.createStatement();
        rs=st.executeQuery("select * from user1");
        ArrayList user=new ArrayList <user> ();
        
        while (rs.next())
        {  
           int id=rs.getInt("id");
           int pass=rs.getInt("pass");
           String name=rs.getString("name");
           String phn=rs.getString("phn");
           String addr=rs.getString("addr");
           String pos=rs.getString("pos");
           String fs=rs.getString("finestat");
           user.add(new user(name,id,pass,phn,addr,pos,fs));
           
        }
        
        return user;
        
    }
    public static List <loan> fetchloan() throws SQLException
    {
          con=DriverManager.getConnection(getConstring());
        st=con.createStatement();
        rs=st.executeQuery("select * from loan");
         ArrayList loan=new ArrayList <loan> ();
        
        while (rs.next())
        {  
           int lid=rs.getInt("loanid");
           int pid=rs.getInt("pid");
           int bid=rs.getInt("bid");
           String issdate=rs.getString("issdate");
           String retdate=rs.getString("retdate");
           String status=rs.getString("status1");
           loan.add(new loan(lid,bid,pid,issdate,retdate,status));
            
        }
        
        return loan;  
        
    }
    
    public static void addlib(List <loan> loans,library lib)
    {
        for (loan l:loans)
        {
            l.setlib(lib);     
            
        }
        
    }
    
      public static void addlobolib1(List <user> users,List <loan> loans,List <book> books,library lib)
      {
          for (user u:users)
          {
              u.addlobolib(loans, books, lib);
          }
          
      }
   
      public static void addltob(List <book> books,List <loan> loans)
      {
          for (book b:books)
          {
              b.addltob(loans);
          }
      }
      
      
     
    
    public loginform() throws SQLException {
        
        
             
        
        
        initComponents();
        
        
        
        
        
        
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jPasswordField1 = new javax.swing.JPasswordField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setFont(new java.awt.Font("Gabriola", 3, 18)); // NOI18N

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel1.setText("LOGIN FORM");

        jPasswordField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jPasswordField1ActionPerformed(evt);
            }
        });

        jLabel2.setText("ID  :");

        jLabel3.setText("Password :");

        jButton1.setText("LOGIN");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(123, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 149, Short.MAX_VALUE)
                    .addComponent(jPasswordField1)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(116, 116, 116))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(159, 159, 159)
                        .addComponent(jButton1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPasswordField1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addContainerGap(83, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jPasswordField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jPasswordField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jPasswordField1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       
        
         List <book> books=new ArrayList <book> ();
        try {
            books=fetchbooks();
        } catch (SQLException ex) {
            Logger.getLogger(loginform.class.getName()).log(Level.SEVERE, null, ex);
        }
             List <user> users=new ArrayList <user> ();
        try {
            users=fetchuser();
        } catch (SQLException ex) {
            Logger.getLogger(loginform.class.getName()).log(Level.SEVERE, null, ex);
        }
            library lib=new library(users,books);
            
            List <loan> loans=new ArrayList <loan>(); 
        try {
            loans=fetchloan();
        } catch (SQLException ex) {
            Logger.getLogger(loginform.class.getName()).log(Level.SEVERE, null, ex);
        }
            addlib(loans,lib);   //adding lib to loan
                    
             addlobolib1(users,loans,books,lib); /// adding loans books and lib to user
             addltob(books,loans); // adding loans to book
        
       int id=Integer.parseInt(this.jTextField1.getText());
       int pass=Integer.parseInt(this.jPasswordField1.getText());
       boolean b=false;
       
       for (user u:lib.persons)
       {
           if (u.id==id && u.pass==pass)
           {
               
               if (u.type.equals("borrower"))
               {
                   
                   borrowerform borrow=new borrowerform(lib,loans,id);
                    borrow.setVisible(true);
                    dispose();
                   
                   
                   
               }
               else if (u.type.equals("clerk"))
               {
                  clerkform cl=new clerkform(lib,loans,id);
                    cl.setVisible(true);
                    dispose();
                   
               }
               else {
                   
                     librarianform libf=new librarianform(lib,loans,id);
                    libf.setVisible(true);
                    dispose();
                   
               }
               
               b=true;
               break;
               
           }
       }
       
       ///
       
       if (b==false)
       {
       invalid in=new invalid();
       in.setVisible(true);
       dispose();
       }
       
       
       



// TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(loginform.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(loginform.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(loginform.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(loginform.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new loginform().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(loginform.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
